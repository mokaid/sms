swagger: '2.0'
info:
  title: Sample API
  version: '1.0.0'
  description: Example docs

# Define security schemes (API Key, JWT)
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-KEY
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
# Apply security globally (can also be applied per operation)
security:
  - ApiKeyAuth: []
  - BearerAuth: []
# Paths definition



paths:
  /signup:
    post:
      tags:
        - Authentication
      summary: "User signup"
      description: "This endpoint registers a new user."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "User data for signup"
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        "200":
          description: "User successfully registered"
          schema:
            $ref: '#/definitions/User'
        "409":
          description: "Email already exists or other conflict error"

  /login:
    post:
      tags:
        - Authentication
      summary: "User login"
      description: "This endpoint authenticates a user and returns a cookie."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "User credentials"
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        "200":
          description: "User successfully authenticated"
          schema:
            type: object
            properties:
              cookie:
                type: string
              findUser:
                $ref: '#/definitions/User'
        "409":
          description: "Authentication failed"

  /logout:
    post:
      tags:
        - Authentication
      summary: "User logout"
      description: "This endpoint logs out a user."
      parameters:
        - in: body
          name: body
          description: "User data for logout"
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        "200":
          description: "User successfully logged out"
          schema:
            $ref: '#/definitions/User'
        "409":
          description: "User not found"

  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  
  /accounts:
    get:
      tags:
        - Accounts
      summary: Find All Accounts
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination.
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of accounts per page.
        - in: query
          name: orderBy
          schema:
            type: string
            default: createdAt
          description: The field to order the accounts by.
        - in: query
          name: sort
          schema:
            type: string
            default: asc
          description: Sorting direction, can be 'asc' or 'desc'.
        - in: query
          name: price
          schema:
            type: number
          description: Price filter for dynamic search. Specify the price to compare based on the condition provided.
        - in: query
          name: priceCondition
          schema:
            type: string
            default: 'eq'
          description: Condition to apply on price filter, can be 'gt' (greater than), 'lt' (less than), or 'eq' (equal to).
        - in: query
          name: oldPrice
          schema:
            type: number
          description: Old price filter for dynamic search. Specify the old price to compare based on the condition provided.
        - in: query
          name: oldPriceCondition
          schema:
            type: string
            default: 'eq'
          description: Condition to apply on old price filter, can be 'gt', 'lt', or 'eq'.
        - in: query
          name: country
          schema:
            type: string
          description: Country filter for dynamic search.
        - in: query
          name: mnc
          schema:
            type: string
          description: Mobile Network Code (MNC) filter for dynamic search.
        - in: query
          name: mcc
          schema:
            type: string
          description: Mobile Country Code (MCC) filter for dynamic search.
        - in: query
          name: currency
          schema:
            type: string
          description: Currency filter for dynamic search.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/AccountProfile'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
                  message:
                    type: string
        500:
          description: Server Error

  /accounts/{id}:
      put:
        tags:
          - Accounts
        summary: Update Price List for an Account
        description: Updates the price list for a specific account. Only 'price' and 'currency' fields can be updated. If 'price' changes, 'oldPrice' will be updated to the previous price.
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
            description: The custom ID of the price item for which to update the price list.
          - name: body
            in: body
            description: Object containing the new price and/or currency.
            required: true
            schema:
              type: object
              required: [price, currency]  # Depending on your logic, adjust required fields here
              properties:
                price:
                  type: string
                  description: New price to update. Required if 'currency' is not provided.
                currency:
                  type: string
                  description: Currency for the new price. Required if 'price' is not provided.
              example:
                price: "100.00"
                currency: "USD"
        responses:
          200:
            description: Price list updated successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/AccountProfile'
                    message:
                      type: string
                      example: 'Price list updated successfully'
          404:
            description: No valid account or price list found for the given ID
          400:
            description: Bad Request (e.g., invalid input data or attempting to update restricted fields)
          409:
            description: Conflict (e.g., unable to update the price list due to existing data state)
          500:
            description: Server error
      delete:
        tags:
        - Accounts
        summary: Delete Price By Id
        parameters:
        - name: id
          in: path
          description: price Id
          required: true
        responses:
          200:
            description: 'OK'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'
      post:
            tags:
              - Accounts
            summary: Add a Price List Item
            description: Add a new price list item to the specified account's price list.
            operationId: addPriceListItem
            parameters:
              - name: id
                in: path
                required: true
                description: The ID of the account to which the price list item is to be added.
                schema:
                  type: string
              - name: body
                in: body
                description: Price list item data
                required: true
                schema:
                  type: object
                  required:
                    - country
                    - MCC
                    - MNC
                    - price
                    - currency
                  properties:
                    country:
                      type: string
                      description: Country code of the price list item.
                    MCC:
                      type: string
                      description: Mobile Country Code.
                    MNC:
                      type: string
                      description: Mobile Network Code.
                    oldPrice:
                      type: string
                      nullable: true
                      description: Previous price, if applicable.
                    price:
                      type: string
                      description: Current price of the item.
                    currency:
                      type: string
                      enum: [USD, EUR, GBP]
                      description: Currency used for the price.
            responses:
              '201':
                description: Successfully added the price list item
              '400':
                description: Invalid input
              '404':
                description: Account not found

  /profiles:
      get:
        tags:
          - Account Profiles
        summary: Find All Profiles
        parameters:
          - in: query
            name: page
            schema:
              type: integer
              default: 1
            description: Page number for pagination.
          - in: query
            name: limit
            schema:
              type: integer
              default: 10
            description: Number of profiles per page.
          - in: query
            name: orderBy
            schema:
              type: string
              default: createdAt
            description: The field to order the profiles by.
          - in: query
            name: sort
            schema:
              type: string
              default: asc
            description: Sorting direction, can be 'asc' or 'desc'.
          - in: query
            name: searchTerm
            schema:
              type: string
            description: The search term used to perform a partial search across multiple profile details fields, such as legal name, accounting reference, etc. There is no default value; a blank value implies no specific search filter.
                    
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/definitions/AccountProfile'
                    message:
                      type: string
          500:
            description: Server Error  

      post:
        tags:
          - Account Profiles
        summary: Add Account Profile
        parameters:
          - name: body
            in: body
            description: Account Profile Data
            required: true
            schema:
              $ref: '#/definitions/AccountProfile'
        responses:
          201:
            description: 'Created'
          400:
            description: 'Bad Request'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'

  /profiles/{id}:
    get:
      tags:
      - Account Profiles
      summary: Find Profile By Id
      parameters:
      - name: id
        in: path
        description: Profile Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    put:
      tags:
      - Account Profiles
      summary: Update Proifle By Id
      parameters:
      - name: id
        in: path
        description: profile Id
        required: true
      - name: body
        in: body
        description: profile Data
        required: true
        schema:
          $ref: '#/definitions/AccountProfile'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'          
    delete:
      tags:
      - Account Profiles
      summary: Delete Profile By Id
      parameters:
      - name: id
        in: path
        description: profile Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /upload/priceList:
    post:
      tags:
        - File Upload
      summary: "Upload a price list Excel file"
      description: "Allows users to upload a price list Excel file along with associated account ID. This endpoint accepts multipart/form-data content type."
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          description: The Excel file to upload.
          required: true
        - in: formData
          name: accountId
          type: string
          description: The account ID associated with the price list file.
          required: true
      responses:
        "200":
          description: "Excel file processed successfully"
        "400":
          description: "Bad Request (e.g., no file uploaded or missing account ID)"
        "500":
          description: "Internal Server Error"


definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  User:
    type: object
    properties:
      _id:
        type: string
      email:
        type: string
      password:
        type: string
      # Include additional properties your User model might have

  AccountProfile:  # New definition for AccountProfile (complete)
    type: object
    properties:
      ProfileDetails:
        type: object
        properties:
          legalName:
            type: string
            description: Client's legal name
          accountingReference:
            type: string
            description: Client's registration number
          address:
            type: string
            description: Client's address
          alertEmail:
            type: string
            description: Email for technical issues
          accountManager:
            type: string
            description: Account Manager from your side
          accountManagerEmail:
            type: string
            description: Account Manager email from client side
          ratingEmails:
            type: array
            items:
              type: string
            description: Emails for price rate sheet
          billingEmails:
            type: array
            items:
              type: string
            description: Emails for invoices
          supportEmail:
            type: string
            description: Email for client technical support
          dailyReportEmails:
            type: array
            items:
              type: string
            description: Emails for daily traffic reports
          classificationLevel:
            type: string
            description: Client classification level (A-B-C)
          phoneNumber:
            type: string
            description: Client's phone number
          timeZone:
            type: string
            description: Client's time zone
          applyTimeZoneToInvoice:
            type: boolean
            description: Apply time zone to invoice
          applyTimeZoneToDailyReport:
            type: boolean
            description: Apply time zone to daily report
          applyTimeZoneToRateNotification:
            type: boolean
            description: Apply time zone to rate notification
          currency:
            type: string
            enum:  # Assuming your Currency enum is defined elsewhere
              - EUR
              - USD
            description: Client's currency
          country:
            type: string
            description: Client's country
          website: 
            type: string
            description: Client's website URL
          logo: 
            type: string
            description: URL or path to client's logo
          vatRegistrationNumber: 
            type: string
            description: Client's VAT registration number 
          clientIPAddress:
            type: array
            items:
                type: string
                description: Client Ip address      

      MO:
        type : object
        properties:
          credit:
            type: number
            description: The fixed credit limit for the client, stored as a positive value but interpreted as negative.
          creditLimit:
            type: number
            default: -1000
            description: The credit limit set for the client, represented as a negative number.
          alertFlexAmount:
            type: number
            description: The extra credit amount allowed once the credit limit is reached.
          alertPercentage1:
            type: number
            description: The first threshold percentage of the credit limit that triggers an alert.
          alertPercentage2:
            type: number
            description: The second threshold percentage of the credit limit that triggers an alert.
          alertPercentage3:
            type: number
            description: The third threshold percentage of the credit limit that triggers an alert.
          creditLimitActive:
            type: boolean
            default: false
            description: Indicates if the credit limit is actively enforced, automatically disabling/enabling profiles/accounts.
          tax:
            type: number
            default: 0
            description: The tax percentage applied to invoices sent to the client.            

      MT:
        type: object
        properties:
          mtCredit:
            type: number
            default: 0
            description: The initial credit for the client, increases with traffic sent to this client as a Vendor (MT).
          mtCreditLimit:
            type: number
            description: Fixed credit limit set for the client as Vendor (MT), should be a positive number.
          mtAlertPercentage1:
            type: number
            description: Percentage of the credit limit at which the first alert is triggered.
          mtAlertPercentage2:
            type: number
            description: Percentage of the credit limit at which the second alert is triggered.
          mtAlertPercentage3:
            type: number
            description: Percentage of the credit limit at which the third alert is triggered.
          tax:
            type: number
            default: 0
            description: Tax percentage, default is 0.

      Invoice:
        type: object
        properties:
          paymentTerm:
            type: string
            description: Time to wait to accept payment from the client.
          billingTerm:
            type: string
            default: "monthly"
            description: Frequency at which invoices will be generated, default is monthly.
          paymentType:
            type: string
            enum: [ "Prepaid", "Postpaid" ]
            description: Type of payment, whether it's Prepaid or Postpaid.
          invoiceTemplate:
            type: string
            enum: [ "EuroWithoutVAT", "EuroWithVAT", "USDWithoutVAT", "USDWithVAT", "Default" ]
            description: Template used for invoicing, options include templates for different currencies and tax configurations.

      Bank:
        type: object
        properties:
          bankName:
            type: string
            description: Name of the bank.
          bankAddress:
            type: string
            description: Address of the bank.
          IBAN:
            type: string
            description: International Bank Account Number.
          swiftCode:
            type: string
            description: SWIFT code for the bank.
          phoneNumber:
            type: string
            description: Phone number associated with the bank account.
          accountNumber:
            type: string
            description: Bank account number.

      Accounts:
        type: array
        description: List of accounts associated with the profile
        items:
          type: object
          properties:
            details:
              type: object
              properties:
                name:
                  type: string
                  description: The name associated with the account
                accountProfile:
                  type: string
                  description: The profile associated with the account
                accountType:
                  type: string
                  enum: [ "Vendor", "Client" ]
                  description: The type of account
                businessType:
                  type: string
                  enum: [ "Operator", "Hub", "Enterprise", "OTT", "Testing" ]
                  description: The business type of the account
                accountCategory:
                  type: string
                  enum: [ "Direct", "Wholesale", "HighQuality", "SimBox", "Special", "Test" ]
                  description: The category of the account
                accountMode:
                  type: string
                  enum: [ "SMPP", "SS7", "Http" ]
                  description: The mode of account operation
                accountStatus:
                  type: string
                  enum: [ "Active", "Inactive" ]
                  description: The status of the account
                timeZone:
                  type: string
                  description: Time zone associated with the account
                applyTimeZoneToInvoice:
                  type: boolean
                  description: Whether to apply the account's time zone to invoices
                applyTimeZoneToDailyReport:
                  type: boolean
                  description: Whether to apply the account's time zone to daily reports
                applyTimeZoneToRateNotification:
                  type: boolean
                  description: Whether to apply the account's time zone to rate notifications
                currency:
                  type: string
                  enum: [ "EUR", "USD" ]
                  description: The currency used by the account

            connection:
              type: object
              properties:
                userName:
                  type: string
                  description: Username for the connection
                password:
                  type: string
                  description: Password for the connection
                ipAddress:
                  type: string
                  description: IP address for the connection
                port:
                  type: number
                  description: Port number for the connection
                sourceTon:
                  type: number
                  description: Source TON (Type of Number) for the connection
                sourceNpi:
                  type: number
                  description: Source NPI (Numbering Plan Indicator) for the connection
                destTon:
                  type: number
                  description: Destination TON (Type of Number) for the connection
                destNpi:
                  type: number
                  description: Destination NPI (Numbering Plan Indicator) for the connection
                maximumConnections:
                  type: number
                  description: Maximum number of concurrent connections allowed
                connectionToOpen:
                  type: number
                  description: Number of connections to open initially
                windowSize:
                  type: number
                  description: The window size for the connection
                enquireLink:
                  type: number
                  description: Interval for sending enquire link messages
                submitPerSecond:
                  type: number
                  description: Maximum number of messages allowed to submit per second
                clientSubmitPerSecond:
                  type: number
                  description: Maximum number of messages the client is allowed to submit per second
                queueToSend:
                  type: number
                  description: Queue size for messages waiting to be sent
                connectionMode:
                  type: string
                  enum: [ "Transceiver", "Receiver", "Transmitter" ]
                  description: The mode of the connection
                translationPrefix:
                  type: string
                  description: Prefix used for number translation

            emailCoverageList:
              type: object
              description: Email coverage list details, required for vendors
              properties:
                email:
                  type: string
                  description: Email address for receiving coverage reports
                fileFormat:
                  type: string
                  enum: [ "CSV", "XLS", "XLSX" ]
                  description: File format of the coverage reports
                partialFileName:
                  type: string
                  description: Partial file name for identifying the coverage reports
                deleteAllExisting:
                  type: boolean
                  description: Whether to delete all existing reports before adding new ones

      SchemaConfig:
        type: object
        required:
          - headerRow
          - fields
        properties:
          headerRow:
            type: integer
            description: "Assuming headers start at the second row"
            default: 1
          fields:
            type: object
            required:
              - country
              - MCC
              - MNC
              - price
              - currency
            properties:
              country:
                type: array
                items:
                  type: string
                description: "Possible header names for country"
              MCC:
                type: array
                items:
                  type: string
                description: "Possible header names for Mobile Country Code"
              MNC:
                type: array
                items:
                  type: string
                description: "Possible header names for Mobile Network Code"
              price:
                type: array
                items:
                  type: string
                description: "Possible header names for price"
              currency:
                type: array
                items:
                  type: string
                default: ["EUR"]
                description: "Default to 'EUR' if column is absent or value is missing. Possible header names for currency"
      

schemes:
 - https
 - http
